name: Reusable workflow to provide evidence of approval

on:
  workflow_call:
    secrets:
      github-token:
        required: true
      kosli-token:
        required: true
    inputs:
      name:
        description: 'Name of the artifact'
        required: true
        type: string
      kosli-pipeline:
        description: 'Name of the Kosli pipeline'
        required: true
        type: string
      sha256:
        type: string
        description: 'SHA256 of the published image'
        required: true
      latest-branch:
        description: 'Branch with last reported version. This gets pushed to by the workflow'
        required: false
        default: 'latest'
        type: string
      dry-run:
        type: boolean
        description: A dry run will not persist any data
        required: false
        default: false

jobs:
  report-approval:
    runs-on: ubuntu-latest
    steps:
      - uses: stacc/github-workflow-actions/actions/setup-kosli@main
        if: ${{ !inputs.dry-run }}
        with:
          kosli-pipeline: ${{ inputs.kosli-pipeline }}
          kosli-token: ${{ secrets.kosli-token }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup oldest commit
        run: |
          echo "oldest_commit=$(git rev-parse origin/${{ inputs.latest-branch }})" >> $GITHUB_ENV
      - name: Get approver
        env:
          GH_TOKEN: ${{ secrets.github-token }}
        run: |
          REPOSITORY="${{ github.repository }}"

          gh api /repos/$REPOSITORY/pulls?state=closed | jq -e -r '.[] | select(.merge_commit_sha == "${{ github.sha }}")' > pr.json

          if [ $? -ne 0 ]
          then
            echo "No closed Pull Requests"
            exit 1
          fi


          LAST_PR_COMMIT="$(jq -r '.head.sha' pr.json)"
          PR_NUMBER="$(jq -r '.number' pr.json)"

          gh api /repos/$REPOSITORY/pulls/$PR_NUMBER/reviews | jq -e -r '.[] | select(.commit_id == "$LAST_PR_COMMIT" and .state == "APPROVED")' > review.json

          if [ $? -ne 0 ]
          then
            echo "No reviews have approved the last commit in Pull Request"
            exit 1
          fi

          echo "Approver: $(jq -r '.user.login' review.json)"
          echo "approver=$(jq -r '.user.login' review.json)" >> $GITHUB_ENV
      - name: Report release approval to Kosli
        if: ${{ !inputs.dry-run }}
        run: kosli pipeline approval report --description "Approval granted via Pull Request by user ${{ env.approver }}" --newest-commit ${{ github.sha }} --oldest-commit ${{ env.oldest_commit }} --sha256 ${{ inputs.sha256 }}
