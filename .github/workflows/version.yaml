name: Resuable Workflow for automatic semantic versioning
on:
  workflow_call:
    secrets:
      pat_token:
        description: 'Personal Access Token for GitHub Actions'
        required: false
      npm_token:
        description: 'NPM token'
        required: false
      slack_release_bot_webhook:
        description: 'Slack webhook for release bot'
        required: false
    inputs:
      name:
        description: 'Name of the artifact. Fallback to package.json name'
        required: false
        type: string
      branches: #Branches to release on
        description: 'Branches to release on'
        type: string
        required: false
        default: |
          ['main']
      dry-run: #Dry run
        description: 'Dry run'
        required: false
        type: boolean
        default: false
      commit-changelog: #Commit changelog
        description: |
          Commits changelog. 
          Warning, this will create a new commit and triggers 
          on "published" might not have correct ref to evaluate PRs'
        required: false
        type: boolean
        default: false
      slack-channel: #Slack channel. Look ABOVE this to read how this might work https://github.com/juliuscc/semantic-release-slack-bot#slack-access-tokenchannel-usage
        description: 'Slack channel'
        required: false
        type: string
        default: "npm-release-feed"
      npm-publish: #NPM publish
        description: 'Should npm package be published'
        required: false
        type: boolean
        default: false
    outputs:
      new_release_published:
        value: ${{ jobs.version.outputs.new_release_published }}
        description: 'Whether a new release was published'
      new_release_version:
        value: ${{ jobs.version.outputs.new_release_version }}
        description: 'Version of the new release'
      new_release_major_version:
        value: ${{ jobs.version.outputs.new_release_major_version }}
        description: 'Major version of the new release'
      new_release_minor_version:
        value: ${{ jobs.version.outputs.new_release_minor_version }}
        description: 'Minor version of the new release'
      new_release_patch_version:
        value: ${{ jobs.version.outputs.new_release_patch_version }}
        description: 'Patch version of the new release'
      new_release_channel:
        value: ${{ jobs.version.outputs.new_release_channel }}
        description: 'The distribution channel on which the last release was initially made available (undefined for the default distribution channel).'
      new_release_notes:
        value: ${{ jobs.version.outputs.new_release_notes }}
        description: 'The release notes for the new release.'
      last_release_version:
        value: ${{ jobs.version.outputs.last_release_version }}
        description: 'Version of the previous release, if there was one.'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_major_version: ${{ steps.semantic.outputs.new_release_major_version }}
      new_release_minor_version: ${{ steps.semantic.outputs.new_release_minor_version }}
      new_release_patch_version: ${{ steps.semantic.outputs.new_release_patch_version }}
      new_release_channel: ${{ steps.semantic.outputs.new_release_channel }}
      new_release_notes: ${{ steps.semantic.outputs.new_release_notes }}
      last_release_version: ${{ steps.semantic.outputs.last_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          extra_plugins: '@semantic-release/changelog @semantic-release/git @semantic-release/exec semantic-release-slack-bot'
          extends: '@stacc/semantic-release-config'
          branches: ${{ inputs.branches }}
          dry_run: ${{ inputs.dry-run }}
        env:
          # If PAT token is sent, we can trigger release triggers. Which we want?
          GITHUB_TOKEN: ${{ secrets.pat_token || secrets.github_token }}
          NPM_TOKEN: ${{ secrets.npm_token }}
          NPM_PUBLISH: ${{ inputs.npm-publish }}
          COMMIT_CHANGE_LOG: ${{ inputs.commit-changelog }}
          SLACK_WEBHOOK: ${{ secrets.slack_release_bot_webhook }}
          SLACK_CHANNEL: ${{ inputs.slack-channel }}
          SEMANTIC_RELEASE_PACKAGE: ${{ inputs.name }}

